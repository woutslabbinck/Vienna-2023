title Requesting data (not signing data)


participant AppLogic
participant SolidLib

participant IDP

participant DataInterface
participant AuthZInterface
participant PolicyNegotiationInterfac
participant LogInterface

AppLogic->SolidLib: Login (IDP?)
SolidLib->IDP: LoginRedirect(IDP)
IDP->SolidLib: Redirect(TokenAuthN)
SolidLib->AppLogic: LoggedIn(Session)
note over SolidLib: Lib knows WebID, client, issuer, well knowns, endpoints


note over AppLogic: If we match the context of a Policy,\nwe automatically agree and sign\nWe match on the Intersection of the context\nThis needs to be in AuthZ Logic - TBC

AppLogic->SolidLib: session.GetData(query, context: purpose[])
note over DataInterface:GET\+ = GET Data, prov, signed
SolidLib->DataInterface:call(TokenAuthN, Query, Action: GET\+, context: purpose[] )
DataInterface->SolidLib: NoTokenAuthZ(redirect: EndpointAuthZ, action: GET\+)
SolidLib->AuthZInterface: call(subj: TokenAuthN, action: GET\+, resource: query, context: purpose)
note over AuthZInterface: 1. Policy Matching and Retrieval\n2. Execute matching Policies\n3. Instantiate relevant Policies\n4.Decide for access OR extra obligations\n(This is where we can do negotiations)
note over AuthZInterface: Obligation for signature is detected
note over AuthZInterface: We sign internally the instantiated Policies\non behalf of owner (in the Sign Component)
AuthZInterface->PolicyNegotiationInterfac: checkNegotiationRequirements(...)
PolicyNegotiationInterfac->AuthZInterface:return(SignaturePreObligations)
AuthZInterface->SolidLib: return (Instantiated Signed Polic(y/ies) )

note over SolidLib:Go through list of policies and Sign\nNow we have an agreement.\nAgreement = doubly signed instantiated policies. \n(IF we do signing before first call to AuthZInterface, then we only need one call)

SolidLib->AuthZInterface:call(agreements: Agreement[])

AuthZInterface->PolicyNegotiationInterfac: checkNegotiationRequirements(...)

note over PolicyNegotiationInterfac: 1. verify double signed\n2. store agreements in Log Store
PolicyNegotiationInterfac->AuthZInterface:return(OK)
AuthZInterface->SolidLib: return authZ token

SolidLib->DataInterface:call(TokenAuthZ, Query, Action: GET\+ )
DataInterface->SolidLib: return Data\+
note over SolidLib: We merge the Data\+ with the agreements so we have Data\+\+
SolidLib->AppLogic: return Data\+\+

